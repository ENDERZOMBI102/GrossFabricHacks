plugins {
	id 'fabric-loom' version '0.9-SNAPSHOT'
	id 'maven-publish'
}

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	maven { url = 'https://maven.auoeke.net' }
	mavenCentral()
}

dependencies {
	minecraft "com.mojang:minecraft:$minecraft_version"
	mappings "net.fabricmc:yarn:$yarn_mappings:v2"
	modImplementation "net.fabricmc:fabric-loader:$loader_version"

	compileOnly 'com.google.code.findbugs:jsr305:+'
	compileOnly 'org.jetbrains:annotations:+'

	testImplementation 'org.junit.jupiter:junit-jupiter:+'

	implementation include('net.bytebuddy:byte-buddy-agent:+')

	modImplementation include('user11681:dynamic-entry:+')
	include implementation('net.auoeke:reflect:3.2.0')  // last java 16 build
	include implementation('net.gudenau.lib:unsafe:1.6.1')  // last java 16 build
}

processResources {
	inputs.property 'version', project.version

	filesMatching('fabric.mod.json') {
		expand([
				'version': project.version,
		])
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	archiveClassifier.set('sources')

	from(sourceSets.main.allSource)
}

jar {
	from('LICENSE')

	manifest {
		attributes(
				'Manifest-Version': ' "1.0"',
				'Agent-Class': 'net.devtech.grossfabrichacks.instrumentation.InstrumentationAgent',
				'Can-Retransform-Classes': 'true'
		)
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}
	// select the repositories you want to publish to
	repositories {
		maven {
			credentials {
				username System.getenv('repo_username')
				password System.getenv('repo_password')
			}
			url = 'https://repo.repsy.io/mvn/enderzombi102/mc/'
		}
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}
